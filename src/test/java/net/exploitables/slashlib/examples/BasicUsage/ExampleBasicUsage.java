package net.exploitables.slashlib.examples.BasicUsage;

import discord4j.core.DiscordClient;
import discord4j.core.GatewayDiscordClient;
import discord4j.core.event.EventDispatcher;
import net.exploitables.slashlib.SlashLib;
import net.exploitables.slashlib.SlashLibBuilder;
import net.exploitables.slashlib.commands.EchoCommand;
import net.exploitables.slashlib.commands.PingCommand;
import net.exploitables.slashlib.commands.TopLevelGroup;

import java.util.Objects;

public class ExampleBasicUsage {
    public static void main(String[] args) {
        // Setup Discord4J
        DiscordClient client = DiscordClient.create(args[0]);
        EventDispatcher dispatcher = EventDispatcher.builder().build();

        // Setup Commands and SlashLib
        SlashLibBuilder slashLibBuilder = new SlashLibBuilder();
        slashLibBuilder.addCommand(new PingCommand());
        slashLibBuilder.addCommand(new EchoCommand());
        slashLibBuilder.addCommand(new TopLevelGroup());
        SlashLib slashLib = slashLibBuilder.build();
        slashLib.registerAsListener(dispatcher);

        // Login to discord
        GatewayDiscordClient gateway = client.gateway()
            .setEventDispatcher(dispatcher)
            .login()
            .block();

        // Register Slash Commands
        Long applicationId = client.getApplicationId().block();
        Objects.requireNonNull(applicationId);
        slashLib.getCommandRegister().registerSlashCommands(client.getApplicationService(), applicationId);

        // Block until disconnect
        //noinspection ConstantConditions
        gateway.onDisconnect().block();
    }
}
