package net.exploitables.slashlib.context;

import reactor.core.publisher.Mono;

import java.util.ArrayList;
import java.util.List;

/**
 * The core builder logic for each of the Context Builders.
 * Not much is here as the dat retrieved is stored in sub-classes.
 */
public class ContextBuilder {
    protected final List<Mono<Integer>> requiredMonoList;

    ContextBuilder() {
        this.requiredMonoList = new ArrayList<>();
    }

    /**
     * Collect the data needed for this Context instance.
     * @return this instance
     */
    public Mono<ContextBuilder> collectData() {
        return Mono.zip(requiredMonoList, (array) -> 1)
            .switchIfEmpty(Mono.error(new DataMissingException(this, "Couldn't collect all data!")))
            //.doOnEach(signal -> System.out.println("Error Signal: " + signal.hasError()))
            .thenReturn(this);
    }
}
