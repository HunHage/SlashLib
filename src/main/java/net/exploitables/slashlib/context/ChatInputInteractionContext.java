package net.exploitables.slashlib.context;

import discord4j.core.event.domain.interaction.ChatInputInteractionEvent;
import discord4j.core.object.command.ApplicationCommandInteraction;
import discord4j.core.object.entity.Guild;
import discord4j.core.object.entity.Member;
import discord4j.core.object.entity.channel.GuildChannel;
import discord4j.core.object.entity.channel.MessageChannel;
import net.exploitables.slashlib.utility.OptionsList;

public class ChatInputInteractionContext {
    private final ChatInputInteractionEvent event;
    private final ApplicationCommandInteraction aci;
    private final OptionsList options;

    private final Guild guild;
    private final MessageChannel messageChannel;
    private final GuildChannel guildChannel;
    private final Member callingUserAsMember;

    public ChatInputInteractionContext(ChatInputInteractionContextBuilder builder) {
        this.event = builder.event;
        this.aci = builder.aci;
        this.options = builder.options;

        this.guild = builder.guild;
        this.messageChannel = builder.messageChannel;
        this.guildChannel = builder.topLevelGuildChannel;
        this.callingUserAsMember = builder.member;
    }

    /** @return the {@link ChatInputInteractionEvent} which corresponding to this interaction */
    public ChatInputInteractionEvent getEvent() { return event; }
    public ApplicationCommandInteraction getAci() { return aci; }

    /** @return the options provided by the calling user */
    public OptionsList getOptions()             { return options; }
    /** @return the {@link Guild} this interaction was created in *if requested* */
    public Guild getGuild()                     { return guild; }
    /** @return the {@link MessageChannel} this interaction was created in *if requested* */
    public MessageChannel getMessageChannel()   { return messageChannel; }
    /** @return the {@link GuildChannel} this interaction was created in *if requested* */
    public GuildChannel getGuildChannel()       { return guildChannel; }
    /** @return the {@link Member} that created this interaction *if requested* */
    public Member getCallingUserAsMember()      { return callingUserAsMember; }
}
