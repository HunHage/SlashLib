package net.exploitables.slashlib.commands;

import discord4j.core.object.command.ApplicationCommand;
import discord4j.discordjson.json.ApplicationCommandRequest;
import net.exploitables.slashlib.context.MessageContext;
import net.exploitables.slashlib.context.MessageContextBuilder;
import reactor.core.publisher.Mono;

/**
 * An abstract class representing a User context menu command.
 */
public abstract class MessageCommand extends BaseCommand {
    protected MessageCommand(String name) {
        // Discord docs state that the description should be an empty string
        super(name, "", null, ApplicationCommand.Type.MESSAGE);
    }

    public abstract Mono<MessageContext> executeMessage(MessageContext context);

    public abstract MessageContextBuilder setRequestData(MessageContextBuilder builder);

    /**
     * @return a representative {@link ApplicationCommandRequest} to compare/create this data with Discord
     */
    @Override
    public ApplicationCommandRequest asRequest() {
        return this.buildBaseRequest().build();
    }
}
